/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pl.aaugustyniak.finiteautomaton.view;

import java.awt.BorderLayout;
import java.awt.Color;
import java.io.File;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import pl.aaugustyniak.finiteautomaton.controller.GraphView;
import pl.aaugustyniak.finiteautomaton.controller.AutomatonBuildController;
import pl.aaugustyniak.finiteautomaton.controller.SetGraphView;
import pl.aaugustyniak.finiteautomaton.model.Alphabet;
import pl.aaugustyniak.finiteautomaton.model.Automaton;
import pl.aaugustyniak.finiteautomaton.model.State;
import pl.aaugustyniak.finiteautomaton.model.StateSet;
import pl.aaugustyniak.finiteautomaton.model.Symbol;
import pl.aaugustyniak.finiteautomaton.model.Word;

/**
 *
 * @author Artur Augustyniak
 */
public class MainWindow extends javax.swing.JFrame {

    private String rawWordInput;
    private Automaton automaton;

    private class AutomatonDefFilter extends javax.swing.filechooser.FileFilter {

        @Override
        public boolean accept(File file) {
            return file.isDirectory() || file.getAbsolutePath().endsWith(".yml");
        }

        @Override
        public String getDescription() {
            return "Yaml Pliki definicji automatu (*.yml)";
        }
    }

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {

        initComponents();
        this.rawWordInput = this.wordInput.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        nfaPane = new javax.swing.JPanel();
        dfaPane = new javax.swing.JPanel();
        wordInput = new javax.swing.JTextField();
        checkButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        result = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openFileControll = new javax.swing.JMenuItem();
        buildExample = new javax.swing.JMenuItem();

        fileChooser.setDialogTitle("Otwórz plik definicji automatu");
        fileChooser.setFileFilter(new AutomatonDefFilter());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nfaPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Potencjalny NFA"));

        javax.swing.GroupLayout nfaPaneLayout = new javax.swing.GroupLayout(nfaPane);
        nfaPane.setLayout(nfaPaneLayout);
        nfaPaneLayout.setHorizontalGroup(
            nfaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 507, Short.MAX_VALUE)
        );
        nfaPaneLayout.setVerticalGroup(
            nfaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        dfaPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Równoważny DFA"));

        javax.swing.GroupLayout dfaPaneLayout = new javax.swing.GroupLayout(dfaPane);
        dfaPane.setLayout(dfaPaneLayout);
        dfaPaneLayout.setHorizontalGroup(
            dfaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 507, Short.MAX_VALUE)
        );
        dfaPaneLayout.setVerticalGroup(
            dfaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );

        wordInput.setText("Wprowadź słowo");
        wordInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                wordInputMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                wordInputMouseExited(evt);
            }
        });

        checkButton.setText("Sprawdź");
        checkButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                checkButtonMouseReleased(evt);
            }
        });

        jLabel1.setForeground(java.awt.Color.blue);
        jLabel1.setText("Wynik");

        jMenu1.setText("Plik");

        openFileControll.setText("Otwórz");
        openFileControll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileControllActionPerformed(evt);
            }
        });
        jMenu1.add(openFileControll);

        buildExample.setText("Przykładowy");
        buildExample.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildExampleActionPerformed(evt);
            }
        });
        jMenu1.add(buildExample);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(wordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 731, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nfaPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dfaPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dfaPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nfaPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkButton)
                    .addComponent(jLabel1)
                    .addComponent(result))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openFileControllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileControllActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                //initComponents();
                this.automaton = AutomatonBuildController.buildAutomatonFromFile(file.getAbsolutePath());
                final GraphView nfa = new GraphView(this.automaton);
                final SetGraphView dfa = new SetGraphView(this.automaton);

                this.nfaPane.removeAll();
                this.dfaPane.removeAll();

                this.nfaPane.setLayout(new BorderLayout());

                this.nfaPane.add(nfa.getVisualizationServer(), BorderLayout.CENTER);

                this.dfaPane.setLayout(new BorderLayout());
                this.dfaPane.add(dfa.getVisualizationServer(), BorderLayout.CENTER);

                this.pack();
                this.setVisible(true);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this,
                        "Nie można odczytać pliku bądź uszkodzony.",
                        "Błąd",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_openFileControllActionPerformed

    private void buildExampleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildExampleActionPerformed
        /**
         * ALFABET
         */
        Symbol zero = new Symbol("0");
        Symbol one = new Symbol("1");

        Alphabet alphabet = new Alphabet();
        alphabet.addSymbol(zero);
        alphabet.addSymbol(one);

        /**
         * STANY I TRANZYCJE
         */
        State a = new State("A", State.StateType.INPUT);
        State b = new State("B", State.StateType.REJECT);
        State c = new State("C", State.StateType.COMBINED);

        a.addResulting(one, a);
        a.addResulting(zero, b);
        b.addResulting(zero, c);
        b.addResulting(one, b);
        b.addResulting(one, a);
        c.addResulting(one, b);

        StateSet ss = new StateSet();
        ss.addState(a).addState(b).addState(c);

        /**
         * AUTOMAT
         */
        this.automaton = new Automaton(alphabet, ss);

        GraphView nfa = new GraphView(this.automaton);
        SetGraphView dfa = new SetGraphView(this.automaton);
        this.nfaPane.removeAll();
        this.dfaPane.removeAll();
        this.nfaPane.setLayout(new BorderLayout());
        this.nfaPane.add(nfa.getVisualizationServer(), BorderLayout.CENTER);

        this.dfaPane.setLayout(new BorderLayout());
        this.dfaPane.add(dfa.getVisualizationServer(), BorderLayout.CENTER);
        this.pack();
        this.setVisible(true);
    }//GEN-LAST:event_buildExampleActionPerformed

    private void wordInputMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wordInputMouseExited
        if (this.wordInput.getText().equals("")) {
            this.wordInput.setText(this.rawWordInput);
        }
    }//GEN-LAST:event_wordInputMouseExited

    private void wordInputMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wordInputMouseEntered

        if (this.wordInput.getText().equals(this.rawWordInput)) {
            this.wordInput.setText("");
        }
    }//GEN-LAST:event_wordInputMouseEntered

    private void checkButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkButtonMouseReleased

        try {
            this.wordInput.setBorder(BorderFactory.createLineBorder(Color.GRAY));
            Word w = new Word(this.wordInput.getText(), this.automaton.getAlphabet());
            this.result.setText(this.automaton.processWord(w).name() + " Etykieta: " + this.automaton.getLastPath().getLastJump().getMetric());
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this,
                    "Wczytaj Automat.",
                    "Błąd",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            this.wordInput.setBorder(BorderFactory.createLineBorder(Color.RED));

        }
    }//GEN-LAST:event_checkButtonMouseReleased
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem buildExample;
    private javax.swing.JButton checkButton;
    public javax.swing.JPanel dfaPane;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    public javax.swing.JPanel nfaPane;
    public javax.swing.JMenuItem openFileControll;
    private javax.swing.JLabel result;
    private javax.swing.JTextField wordInput;
    // End of variables declaration//GEN-END:variables
}
